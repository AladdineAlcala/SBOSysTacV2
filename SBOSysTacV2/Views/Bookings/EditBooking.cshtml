@using SBOSysTacV2.ViewModel
@model BookingsViewModel

<section class="content">

    <div class="box">
        
        <div class="row">
            <div class="col-sm-6">
                <div class="box-header with-border">
                    <i class="fa fa-cart-plus fa-fw"></i>
                    <h3 class="box-title">Modify Booking Details</h3>

                </div>
              
            </div>
            <div class="col-sm-6">
                <h5>All fields marked with an * are required</h5>
            </div>
        </div>

        @using (Html.BeginForm("EditBooking", "Bookings", FormMethod.Post, new { @class = "form-horizontal", id = "modifybooking" }))
        {
            @Html.AntiForgeryToken()

            @Html.ValidationSummary(true)

            @Html.HiddenFor(m => m.trn_Id)

            @Html.HiddenFor(m => m.transdate)

            <div class="box-body">

                <div class="row">
                    
                    <div class="col-sm-8" style="margin-right: 0px; padding-right: 0px; width: 650px;">
                        
                        <div class="form-group" style="width: 600px;">
                            @Html.LabelFor(m => m.booktypecode, new {@class = "col-sm-3 control-label required"})

                            <div class="col-sm-8">
                                
                                @Html.DropDownListFor(m=>m.booktypecode,new SelectList(Model.DictBooktype,"Value","Key"), "----- Select Service Type -------", new { @class = "form-control"})
                                @*@Html.TextBoxFor(m => m.fullname, new {@class = "form-control", @id = "customer", @placeholder = "Search Customer"})
                                @Html.ValidationMessageFor(model => model.fullname, null, new {@class = "text-danger"})*@
                            </div>

                        </div>

                        <div class="form-group" style="width: 600px;">
                            @Html.LabelFor(m => m.fullname, new {@class = "col-sm-3 control-label required"})

                            <div class="col-sm-8">

                                @Html.TextBoxFor(m => m.fullname, new {@class = "form-control", @id = "customer", @placeholder = "Search Customer"})
                                @Html.ValidationMessageFor(model => model.fullname, null, new {@class = "text-danger"})
                            </div>

                        </div>

                        <div class="form-group" style="width: 600px;">
                            @Html.LabelFor(m => m.occasion, new {@class = "col-sm-3 control-label required"})
                            <div class="col-sm-8">

                                @Html.TextBoxFor(m => m.occasion, new {@class = "form-control", @id = "occassion", @placeholder = "Enter Occassion"})
                                @Html.ValidationMessageFor(model => model.occasion, null, new {@class = "text-danger"})
                            </div>

                        </div>

                        <div class="form-group" style="width: 600px;">
                            @Html.LabelFor(m => m.startdate, new {@class = "col-sm-3 control-label required"})
                            <div class="col-sm-8">
                                <div class="input-group date">

                                    <div class="input-group-addon">
                                        <i class="fa fa-calendar"></i>
                                    </div>


                                    @Html.TextBoxFor(m => m.startdate, new {@class = "form-control pull-right", @id = "event_date", @value = Model.startdate})
                                </div>
                                @Html.ValidationMessageFor(model => model.startdate, null, new {@class = "text-danger"})
                            </div>



                        </div>

                        <div class="form-group" style="width: 600px;">
                            @Html.LabelFor(m => m.noofperson, new {@class = "col-sm-3 control-label required"})
                            <div class="col-sm-8">
                                @Html.TextBoxFor(m => m.noofperson, new {@class = "form-control", @placeholder = "Enter no. of person"})
                                @Html.ValidationMessageFor(m => m.noofperson, null, new {@class = "text-danger"})
                            </div>

                        </div>
                        <div class="form-group" style="width: 600px;">
                            @Html.LabelFor(m => m.venue, new {@class = "col-sm-3 control-label"})
                            <div class="col-sm-8">
                                @Html.TextBoxFor(m => m.venue, new {@class = "form-control", @placeholder = "Enter venue"})
                            </div>

                        </div>
                        <div class="form-group" style="width: 600px;">
                            <label for="package" class="col-sm-3 control-label required">Select Package</label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    @*<input type="text" class="form-control">*@
                                    @Html.TextBoxFor(m => m.packagename, new {@class = "form-control required", @placeholder = "Select Package", @id = "packagename"})
                                    <span class="input-group-addon modal-package" data-toggle="modal" data-target="#modal-package" id="modalSearchPackage"><i class="fa fa-search"></i></span>
                                </div>
                                @Html.ValidationMessageFor(m => m.packagename, null, new {@class = "text-danger"})
                            </div>

                        </div>

                        <div class="box-body" style="width: 450px; margin-left: 150px;">
                            <div class="row">
                                <p class="text-black" style="display: inline-block">Package location applicable for:</p>
                                <span class="text-bold label label-info" style="margin-left: 5px; font-size: 1em;" id="packageloc_app">@Model.area_desc</span>
                            </div>
                            <div class="row">
                                <div class="checkbox">
                                    <label>
                                        @Html.CheckBoxFor(m => m.apply_extendedAmount, new {@class = "options", @id = "loc_isextended"})
                                        With extended add-on applied?
                                    </label>

                                </div>
                            </div>
                        </div>

                    </div>

                    
                    

                    <div class="col-sm-4" style="margin-left: 0px; padding-left: 0px; width: 400px;">

                        <div class="form-group" style="width: 400px;">
                            <label class="col-sm-2 control-label">Service Type</label>
                            <div class="col-sm-10">
                                @Html.DropDownListFor(m => m.serviceId, Model.Servicetype_ListItems, "----- Select Service Type -------", new {@class = "form-control", @id = "servicetype"})
                            </div>

                        </div>

                        <div class="form-group" style="width: 400px;">
                            <label class="col-sm-2 control-label"> Motif: </label>
                            @*@Html.LabelFor(m => m.eventcolor, new {@class = "col-sm-5 control-label"})*@
                            <div class="col-sm-10">
                                @Html.TextBoxFor(m => m.eventcolor, new {@class = "form-control", @placeholder = "Enter Motif for Event"})
                            </div>

                        </div>
                        
                        <div class="form-group" style="width: 400px;">
                            <div class="col-sm-12">
                                <label class="control-label">Notes: </label>
                                @Html.TextAreaFor(m => m.refernce, new {@class = "form-control", @placeholder = "Notes", rows = "3" })
                            </div>

                        </div>
                        
                        
                        <div class="form-group" style="width: 400px; margin-top: 20px;">
                            <div class="col-sm-12">
                                <label class="control-label">Created By: </label>
                                @Html.TextBoxFor(m => m.b_createdbyUserName, new { @class = "form-control",disabled="disabled"})
                            </div>

                        </div>
                        
                        <div class="form-group" style="width: 400px;">
                            <div class="col-sm-12">
                                <label class="control-label">Created Date/Time: </label>
                                @Html.TextBoxFor(m => m.b_updatedDate, new {@class = "form-control", disabled = "disabled" })
                            </div>

                        </div>

                    </div>
                      
                 
                    

                </div>



            </div>
            @Html.HiddenFor(m => m.c_Id, new { @id = "hidden_cusId" })
            @Html.HiddenFor(m => m.pId, new { @id = "hidden_packageId" })
            @Html.HiddenFor(m=>m.areaId,new {@id="hidden_areaid"})
            @Html.HiddenFor(m=>m.serve_status)
            <div class="box-footer" style="padding-left: 0px;">
                <div class="col-md-5 col-sm-offset-4">


                    <button class="btn bg-olive btn-flat" type="submit" id="btn_modifybooking"><i class="fa fa-credit-card"></i> Modify Booking</button>
                    <button class="btn bg-purple btn-flat" type="button" id="btn_cancelbooking">Cancel</button>

                </div>
            </div>
            <!-- /.box-footer-->

        }

    </div>

</section>
<!-- main container-->


<div class="modal fade" id="modal-searchPackage">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Select Package</h4>
            </div>
            <div class="modal-body" id="modalcontent">

            </div>
            <div class="modal-footer">
                @*<button type="button" class="btn btn-outline pull-left" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-outline" id="btnSavelocation">Save changes</button>*@
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<!-- /.modal -->



@section scripts
{

    <script type="text/javascript">


        var bookingsUrl = {
            bookUrl_IndexLoad: "@Url.Action("Index", "Bookings")",
            bookUrl_loadBookings: "@Url.Action("LoadBookings", "Bookings")",
            bookUrl_createBooking: "@Url.Action("CreateBooking", "Bookings")",
            bookUrl_searchPackage: "@Url.Action("SearchPackage_Transaction","Packages")",
            bookUrl_getPackageBookingDetailsId:"@Url.Action("GetPackageBookingDetails", "Bookings",new {transId = "trans_Id"})",
            bookUrl_areaPackages: "@Url.Action("GetPackagesByLocation", "Packages")",
            bookUrl_getResultSearchPackages: "@Url.Action("GetResultSearchPackageBooking", "Packages")"

        }

        $(function () {




            var customers = new Bloodhound({

                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('fullname'),

                queryTokenizer: Bloodhound.tokenizers.whitespace,

                remote: {

                    url: '/Customers/getCustomers?query=%QUERY',
                    // url: '/Sals/Customers/GetCustomers?query=%QUERY',
                    wildcard: '%QUERY'

                }

            });

            //customers.initialize();

            $('#customer').typeahead({

                    highlight: true

                },
                {
                    name: 'customers',

                    display: 'fullname',

                    source: customers

                }).on("typeahead:selected typeahead:autocompleted", function (e, customer) {
                e.preventDefault();
                $('#hidden_cusId').val(customer.customerId);
                //vm.customerId = customer.customerId;
                //console.log(vm.customerId);
            });

            $("#event_date").datetimepicker({
                format: "MM/DD/YYYY HH:mm A",
                @*minDate: '@Model.startdate'*@
                defaultDate: '@Model.startdate'
            });


            @*$('#event_date').datetimepicker(
                {
                    //format: "DD-MMM-YYYY",
                    //defaultDate: dateNow

                    //maxDate: moment(),
                    allowInputToggle: true,
                    enabledHours: false,
                    locale: moment().local('en'),
                    format: "DD-MMM-YYYY HH:mm A",
                    minDate: ' @Model.startdate'

                }
            );*@

        });//==== end function



    </script>

    @Scripts.Render("~/Scripts/js_bookings.js")
}
